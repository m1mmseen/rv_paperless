{
  "version": 3,
  "sources": ["../../../../../node_modules/html-to-image/es/util.js", "../../../../../node_modules/html-to-image/es/clone-pseudos.js", "../../../../../node_modules/html-to-image/es/mimes.js", "../../../../../node_modules/html-to-image/es/dataurl.js", "../../../../../node_modules/html-to-image/es/clone-node.js", "../../../../../node_modules/html-to-image/es/embed-resources.js", "../../../../../node_modules/html-to-image/es/embed-images.js", "../../../../../node_modules/html-to-image/es/apply-style.js", "../../../../../node_modules/html-to-image/es/embed-webfonts.js", "../../../../../node_modules/html-to-image/es/index.js"],
  "sourcesContent": ["export function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport const uuid = (() => {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => resolve(args), ms);\n    });\n}\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i++) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const win = node.ownerDocument.defaultView || window;\n    const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n    return val ? parseFloat(val.replace('px', '')) : 0;\n}\nfunction getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nfunction getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getImageSize(targetNode, options = {}) {\n    const width = options.width || getNodeWidth(targetNode);\n    const height = options.height || getNodeHeight(targetNode);\n    return { width, height };\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384;\nexport function checkCanvasDimensions(canvas) {\n    if (canvas.width > canvasDimensionLimit ||\n        canvas.height > canvasDimensionLimit) {\n        if (canvas.width > canvasDimensionLimit &&\n            canvas.height > canvasDimensionLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= canvasDimensionLimit / canvas.width;\n                canvas.width = canvasDimensionLimit;\n            }\n            else {\n                canvas.width *= canvasDimensionLimit / canvas.height;\n                canvas.height = canvasDimensionLimit;\n            }\n        }\n        else if (canvas.width > canvasDimensionLimit) {\n            canvas.height *= canvasDimensionLimit / canvas.width;\n            canvas.width = canvasDimensionLimit;\n        }\n        else {\n            canvas.width *= canvasDimensionLimit / canvas.height;\n            canvas.height = canvasDimensionLimit;\n        }\n    }\n}\nexport function canvasToBlob(canvas, options = {}) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => {\n            canvas.toBlob(resolve, options.type ? options.type : 'image/png', options.quality ? options.quality : 1);\n        });\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas\n            .toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined)\n            .split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], {\n            type: options.type ? options.type : 'image/png',\n        }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.decode = () => resolve(img);\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'async';\n        img.src = url;\n    });\n}\nexport async function svgToDataURL(svg) {\n    return Promise.resolve()\n        .then(() => new XMLSerializer().serializeToString(svg))\n        .then(encodeURIComponent)\n        .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n}\nexport async function nodeToDataURL(node, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return svgToDataURL(svg);\n}\nexport const isInstanceOfElement = (node, instance) => {\n    if (node instanceof instance)\n        return true;\n    const nodePrototype = Object.getPrototypeOf(node);\n    if (nodePrototype === null)\n        return false;\n    return (nodePrototype.constructor.name === instance.name ||\n        isInstanceOfElement(nodePrototype, instance));\n};\n", "import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n", "const WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n    webp: 'image/webp',\n};\nfunction getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\n", "function getContentFromDataUrl(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport async function fetchAsDataURL(url, init, process) {\n    const res = await fetch(url, init);\n    if (res.status === 404) {\n        throw new Error(`Resource \"${res.url}\" not found`);\n    }\n    const blob = await res.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = () => {\n            try {\n                resolve(process({ res, result: reader.result }));\n            }\n            catch (error) {\n                reject(error);\n            }\n        };\n        reader.readAsDataURL(blob);\n    });\n}\nconst cache = {};\nfunction getCacheKey(url, contentType, includeQueryParams) {\n    let key = url.replace(/\\?.*/, '');\n    if (includeQueryParams) {\n        key = url;\n    }\n    // font resource\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return contentType ? `[${contentType}]${key}` : key;\n}\nexport async function resourceToDataURL(resourceUrl, contentType, options) {\n    const cacheKey = getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime();\n    }\n    let dataURL;\n    try {\n        const content = await fetchAsDataURL(resourceUrl, options.fetchRequestInit, ({ res, result }) => {\n            if (!contentType) {\n                // eslint-disable-next-line no-param-reassign\n                contentType = res.headers.get('Content-Type') || '';\n            }\n            return getContentFromDataUrl(result);\n        });\n        dataURL = makeDataUrl(content, contentType);\n    }\n    catch (error) {\n        dataURL = options.imagePlaceholder || '';\n        let msg = `Failed to fetch resource: ${resourceUrl}`;\n        if (error) {\n            msg = typeof error === 'string' ? error : error.message;\n        }\n        if (msg) {\n            console.warn(msg);\n        }\n    }\n    cache[cacheKey] = dataURL;\n    return dataURL;\n}\n", "import { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray, isInstanceOfElement } from './util';\nimport { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\nasync function cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === 'data:,') {\n        return canvas.cloneNode(false);\n    }\n    return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n    if (video.currentSrc) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = video.clientWidth;\n        canvas.height = video.clientHeight;\n        ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataURL = canvas.toDataURL();\n        return createImage(dataURL);\n    }\n    const poster = video.poster;\n    const contentType = getMimeType(poster);\n    const dataURL = await resourceToDataURL(poster, contentType, options);\n    return createImage(dataURL);\n}\nasync function cloneIFrameElement(iframe) {\n    var _a;\n    try {\n        if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) {\n            return (await cloneNode(iframe.contentDocument.body, {}, true));\n        }\n    }\n    catch (_b) {\n        // Failed to clone iframe\n    }\n    return iframe.cloneNode(false);\n}\nasync function cloneSingleNode(node, options) {\n    if (isInstanceOfElement(node, HTMLCanvasElement)) {\n        return cloneCanvasElement(node);\n    }\n    if (isInstanceOfElement(node, HTMLVideoElement)) {\n        return cloneVideoElement(node, options);\n    }\n    if (isInstanceOfElement(node, HTMLIFrameElement)) {\n        return cloneIFrameElement(node);\n    }\n    return node.cloneNode(false);\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n    var _a, _b;\n    let children = [];\n    if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n        children = toArray(nativeNode.assignedNodes());\n    }\n    else if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        ((_a = nativeNode.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) {\n        children = toArray(nativeNode.contentDocument.body.childNodes);\n    }\n    else {\n        children = toArray(((_b = nativeNode.shadowRoot) !== null && _b !== void 0 ? _b : nativeNode).childNodes);\n    }\n    if (children.length === 0 ||\n        isInstanceOfElement(nativeNode, HTMLVideoElement)) {\n        return clonedNode;\n    }\n    await children.reduce((deferred, child) => deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild) => {\n        if (clonedChild) {\n            clonedNode.appendChild(clonedChild);\n        }\n    }), Promise.resolve());\n    return clonedNode;\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) {\n        return;\n    }\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    }\n    else {\n        toArray(sourceStyle).forEach((name) => {\n            let value = sourceStyle.getPropertyValue(name);\n            if (name === 'font-size' && value.endsWith('px')) {\n                const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n                value = `${reducedFont}px`;\n            }\n            if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n                name === 'display' &&\n                value === 'inline') {\n                value = 'block';\n            }\n            if (name === 'd' && clonedNode.getAttribute('d')) {\n                value = `path(${clonedNode.getAttribute('d')})`;\n            }\n            targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child) => nativeNode.value === child.getAttribute('value'));\n        if (selectedOption) {\n            selectedOption.setAttribute('selected', '');\n        }\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        cloneCSSStyle(nativeNode, clonedNode);\n        clonePseudoElements(nativeNode, clonedNode);\n        cloneInputValue(nativeNode, clonedNode);\n        cloneSelectValue(nativeNode, clonedNode);\n    }\n    return clonedNode;\n}\nasync function ensureSVGSymbols(clone, options) {\n    const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : [];\n    if (uses.length === 0) {\n        return clone;\n    }\n    const processedDefs = {};\n    for (let i = 0; i < uses.length; i++) {\n        const use = uses[i];\n        const id = use.getAttribute('xlink:href');\n        if (id) {\n            const exist = clone.querySelector(id);\n            const definition = document.querySelector(id);\n            if (!exist && definition && !processedDefs[id]) {\n                // eslint-disable-next-line no-await-in-loop\n                processedDefs[id] = (await cloneNode(definition, options, true));\n            }\n        }\n    }\n    const nodes = Object.values(processedDefs);\n    if (nodes.length) {\n        const ns = 'http://www.w3.org/1999/xhtml';\n        const svg = document.createElementNS(ns, 'svg');\n        svg.setAttribute('xmlns', ns);\n        svg.style.position = 'absolute';\n        svg.style.width = '0';\n        svg.style.height = '0';\n        svg.style.overflow = 'hidden';\n        svg.style.display = 'none';\n        const defs = document.createElementNS(ns, 'defs');\n        svg.appendChild(defs);\n        for (let i = 0; i < nodes.length; i++) {\n            defs.appendChild(nodes[i]);\n        }\n        clone.appendChild(svg);\n    }\n    return clone;\n}\nexport async function cloneNode(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) {\n        return null;\n    }\n    return Promise.resolve(node)\n        .then((clonedNode) => cloneSingleNode(clonedNode, options))\n        .then((clonedNode) => cloneChildren(node, clonedNode, options))\n        .then((clonedNode) => decorate(node, clonedNode))\n        .then((clonedNode) => ensureSVGSymbols(clonedNode, options));\n}\n", "import { resolveUrl } from './util';\nimport { getMimeType } from './mimes';\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nfunction toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const urls = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        urls.push(url);\n        return raw;\n    });\n    return urls.filter((url) => !isDataUrl(url));\n}\nexport async function embed(cssText, resourceURL, baseURL, options, getContentFromUrl) {\n    try {\n        const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n        const contentType = getMimeType(resourceURL);\n        let dataURL;\n        if (getContentFromUrl) {\n            const content = await getContentFromUrl(resolvedURL);\n            dataURL = makeDataUrl(content, contentType);\n        }\n        else {\n            dataURL = await resourceToDataURL(resolvedURL, contentType, options);\n        }\n        return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`);\n    }\n    catch (error) {\n        // pass\n    }\n    return cssText;\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport async function embedResources(cssText, baseUrl, options) {\n    if (!shouldEmbed(cssText)) {\n        return cssText;\n    }\n    const filteredCSSText = filterPreferredFontFormat(cssText, options);\n    const urls = parseURLs(filteredCSSText);\n    return urls.reduce((deferred, url) => deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText));\n}\n", "import { embedResources } from './embed-resources';\nimport { toArray, isInstanceOfElement } from './util';\nimport { isDataUrl, resourceToDataURL } from './dataurl';\nimport { getMimeType } from './mimes';\nasync function embedProp(propName, node, options) {\n    var _a;\n    const propValue = (_a = node.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue(propName);\n    if (propValue) {\n        const cssString = await embedResources(propValue, null, options);\n        node.style.setProperty(propName, cssString, node.style.getPropertyPriority(propName));\n        return true;\n    }\n    return false;\n}\nasync function embedBackground(clonedNode, options) {\n    if (!(await embedProp('background', clonedNode, options))) {\n        await embedProp('background-image', clonedNode, options);\n    }\n    if (!(await embedProp('mask', clonedNode, options))) {\n        await embedProp('mask-image', clonedNode, options);\n    }\n}\nasync function embedImageNode(clonedNode, options) {\n    const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement);\n    if (!(isImageElement && !isDataUrl(clonedNode.src)) &&\n        !(isInstanceOfElement(clonedNode, SVGImageElement) &&\n            !isDataUrl(clonedNode.href.baseVal))) {\n        return;\n    }\n    const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal;\n    const dataURL = await resourceToDataURL(url, getMimeType(url), options);\n    await new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        const image = clonedNode;\n        if (image.decode) {\n            image.decode = resolve;\n        }\n        if (image.loading === 'lazy') {\n            image.loading = 'eager';\n        }\n        if (isImageElement) {\n            clonedNode.srcset = '';\n            clonedNode.src = dataURL;\n        }\n        else {\n            clonedNode.href.baseVal = dataURL;\n        }\n    });\n}\nasync function embedChildren(clonedNode, options) {\n    const children = toArray(clonedNode.childNodes);\n    const deferreds = children.map((child) => embedImages(child, options));\n    await Promise.all(deferreds).then(() => clonedNode);\n}\nexport async function embedImages(clonedNode, options) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        await embedBackground(clonedNode, options);\n        await embedImageNode(clonedNode, options);\n        await embedChildren(clonedNode, options);\n    }\n}\n", "export function applyStyle(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n", "import { toArray } from './util';\nimport { fetchAsDataURL } from './dataurl';\nimport { shouldEmbed, embedResources } from './embed-resources';\nconst cssFetchCache = {};\nasync function fetchCSS(url) {\n    let cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const res = await fetch(url);\n    const cssText = await res.text();\n    cache = { url, cssText };\n    cssFetchCache[url] = cache;\n    return cache;\n}\nasync function embedFonts(data, options) {\n    let cssText = data.cssText;\n    const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n    const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n    const loadFonts = fontLocs.map(async (loc) => {\n        let url = loc.replace(regexUrl, '$1');\n        if (!url.startsWith('https://')) {\n            url = new URL(url, data.url).href;\n        }\n        return fetchAsDataURL(url, options.fetchRequestInit, ({ result }) => {\n            cssText = cssText.replace(loc, `url(${result})`);\n            return [loc, result];\n        });\n    });\n    return Promise.all(loadFonts).then(() => cssText);\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    // eslint-disable-next-line prefer-regex-literals\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nasync function getCSSRules(styleSheets, options) {\n    const ret = [];\n    const deferreds = [];\n    // First loop inlines imports\n    styleSheets.forEach((sheet) => {\n        if ('cssRules' in sheet) {\n            try {\n                toArray(sheet.cssRules || []).forEach((item, index) => {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        let importIndex = index + 1;\n                        const url = item.href;\n                        const deferred = fetchCSS(url)\n                            .then((metadata) => embedFonts(metadata, options))\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            try {\n                                sheet.insertRule(rule, rule.startsWith('@import')\n                                    ? (importIndex += 1)\n                                    : sheet.cssRules.length);\n                            }\n                            catch (error) {\n                                console.error('Error inserting rule from remote css', {\n                                    rule,\n                                    error,\n                                });\n                            }\n                        }))\n                            .catch((e) => {\n                            console.error('Error loading remote css', e.toString());\n                        });\n                        deferreds.push(deferred);\n                    }\n                });\n            }\n            catch (e) {\n                const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    deferreds.push(fetchCSS(sheet.href)\n                        .then((metadata) => embedFonts(metadata, options))\n                        .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                        inline.insertRule(rule, sheet.cssRules.length);\n                    }))\n                        .catch((err) => {\n                        console.error('Error loading remote stylesheet', err);\n                    }));\n                }\n                console.error('Error inlining remote css file', e);\n            }\n        }\n    });\n    return Promise.all(deferreds).then(() => {\n        // Second loop parses rules\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules || []).forEach((item) => {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.error(`Error while reading CSS rules from ${sheet.href}`, e);\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nasync function parseWebFontRules(node, options) {\n    if (node.ownerDocument == null) {\n        throw new Error('Provided element is not within a Document');\n    }\n    const styleSheets = toArray(node.ownerDocument.styleSheets);\n    const cssRules = await getCSSRules(styleSheets, options);\n    return getWebFontRules(cssRules);\n}\nexport async function getWebFontCSS(node, options) {\n    const rules = await parseWebFontRules(node, options);\n    const cssTexts = await Promise.all(rules.map((rule) => {\n        const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return embedResources(rule.cssText, baseUrl, options);\n    }));\n    return cssTexts.join('\\n');\n}\nexport async function embedWebFonts(clonedNode, options) {\n    const cssText = options.fontEmbedCSS != null\n        ? options.fontEmbedCSS\n        : options.skipFonts\n            ? null\n            : await getWebFontCSS(clonedNode, options);\n    if (cssText) {\n        const styleNode = document.createElement('style');\n        const sytleContent = document.createTextNode(cssText);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n    }\n}\n", "import { cloneNode } from './clone-node';\nimport { embedImages } from './embed-images';\nimport { applyStyle } from './apply-style';\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts';\nimport { getImageSize, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, checkCanvasDimensions, } from './util';\nexport async function toSvg(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const clonedNode = (await cloneNode(node, options, true));\n    await embedWebFonts(clonedNode, options);\n    await embedImages(clonedNode, options);\n    applyStyle(clonedNode, options);\n    const datauri = await nodeToDataURL(clonedNode, width, height);\n    return datauri;\n}\nexport async function toCanvas(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const svg = await toSvg(node, options);\n    const img = await createImage(svg);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const ratio = options.pixelRatio || getPixelRatio();\n    const canvasWidth = options.canvasWidth || width;\n    const canvasHeight = options.canvasHeight || height;\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    if (!options.skipAutoScale) {\n        checkCanvasDimensions(canvas);\n    }\n    canvas.style.width = `${canvasWidth}`;\n    canvas.style.height = `${canvasHeight}`;\n    if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nexport async function toPixelData(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const canvas = await toCanvas(node, options);\n    const ctx = canvas.getContext('2d');\n    return ctx.getImageData(0, 0, width, height).data;\n}\nexport async function toPng(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL();\n}\nexport async function toJpeg(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL('image/jpeg', options.quality || 1);\n}\nexport async function toBlob(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    const blob = await canvasToBlob(canvas);\n    return blob;\n}\nexport async function getFontEmbedCSS(node, options = {}) {\n    return getWebFontCSS(node, options);\n}\n"],
  "mappings": "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",
  "names": ["process", "dataURL", "cache"]
}
